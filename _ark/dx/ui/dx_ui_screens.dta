{new GHPanel
   dx_welcome_panel
   (file dx_welcome.milo)
   (enter
      {we_tape1.mesh set_showing FALSE}
      {we_skull.tex set_bitmap dx/custom_textures/_additional_textures/logo.png}
      {we_skulls.mesh set_local_scale 3.3 3 3}
      {we_skulls.mesh set_local_pos_index 0 140}
      {we_skulls.mesh set_local_pos_index 2 -35}
      {we_deaththreat.lbl set_local_pos_index 0 -195}
      {we_deaththreat.lbl set_local_scale 1.3 1.3 1.3}
      {we_quote.lbl set_local_pos_index 0 -195}
      {we_quote.lbl set_local_pos_index 2 -35}
      {we_quote.lbl set_local_scale 1.3 1.3 1.3}
      {we_bandname.lbl set_showing FALSE}
   )
}
{new GHScreen
   dx_welcome_screen
   (panels dx_welcome_panel helpbar)
   (focus dx_welcome_panel)
   (helpbar (default ((fret1 help_continue))))
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {ui goto_screen main_screen}
      }
   )
}
{new GHPanel
   dx_sel_part_panel
   (file "../../ui/practice_selpart.milo")
   (focus part0.btn)
   (sel_buttons part0.btn part1.btn) ;define what buttons are available in this screen (part0 guitar/lead, part1 rhythm/bass, part2 drums)
   (set_button_text ;setup button text, called when screen is entered
      {do
         ($song {gamecfg get_song}) ;setup song variable for use in this block
         {part0.btn set_text
            {sprint
               "sg_"
               {song_provider get_instrument $song 0}
            }
         } ;for some reason hmx adds "sg_" to all their instrument localizations. set part 0 label to the 1st instrument track name
         {if_else
            {||
               {song_provider has_instrument {gamecfg get_song} bass}
               {song_provider has_instrument {gamecfg get_song} rhythm}
            }
            {part1.btn set_text
               {sprint
                  "sg_"
                  {song_provider get_instrument $song 1}
               }
            } ;set part 1 label to the 2nd instrument track name in the song definition
            {do
               {part1.btn set_state kDisabled} ;if not, disable the button
               {part1.btn set_showing FALSE} ;if not, hide the button
            }
         }
         {if
            {||
               {song_provider has_instrument {gamecfg get_song} bass}
               {song_provider has_instrument {gamecfg get_song} rhythm}
            }
            {if
               {==
                  {song_provider get_instrument $song 1}
                  "rhythm"
               } ;if the second instrument track in the song definition is rhythm
               {part0.btn set_text "sg_lead"} ;then set part 0 to be "lead" instead of "guitar"
            }
         }
         ;{part2.btn set_text "sg_drum"} ;always set part 2 label to sg_drum since nothing else uses this
         ;{if_else {song_provider has_instrument {gamecfg get_song} drum} ;check if there is an instrument with the name "drum"
         ;   {part2.btn set_text "sg_drum"} ;if there is, set the text to drum again
         ;   {do
         ;      {part2.btn set_state kDisabled} ;if not, disable the button
         ;      {part2.btn set_showing FALSE} ;if not, hide the button
         ;   }
         ;}
      }
   )
   (enter
      {do
         ($song {gamecfg get_song}) ;setup variable for this code block
         {if
            {||
               {song_provider has_instrument {gamecfg get_song} bass}
               {song_provider has_instrument {gamecfg get_song} rhythm}
            }
            {switch {song_provider get_instrument $song 1} ;switch action based on result of which instrument is second in the song definition
               (bass {gamecfg set_track_type bass}) ;if it's bass, set the track type to bass
               (rhythm {gamecfg set_track_type rhythm}) ;if it's rhythm, set the track type to rhythm
            }
         }
         {$this set_button_text} ;run the set_button_text code block above
      }
   )
   (SELECT_START_MSG
      {switch $component
         (part0.btn
            {gamecfg set_track 0 0}
            {gamecfg set_track_type guitar}
         )
         (part1.btn
            {gamecfg set_track 0 1}
         )
         (part2.btn {gamecfg set_track 0 2})
         kDataUnhandled
      }
      {ui goto_screen qp_diff_screen}
   )
}
{new GHScreen
   dx_sel_part_screen
   (animate_transition {! $dx_fast_menus})
   (panels meta dx_sel_part_panel helpbar)
   (focus dx_sel_part_panel)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (start dx_os_helpbar)
            (strum help_updown)
         )
      )
   )
   (BUTTON_DOWN_MSG DX_OPEN_OVERSHELL kDataUnhandled)
}