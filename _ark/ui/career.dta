{func is_updown_button
   ($button)
   {'||' {== $button kPad_DDown} {== $button kPad_DUp}}
}
#define VENUE_MAP_SCROLL_SEC (0.3)
{new CharsysPanel
   char_single
   (num_placers 1)
   (load_order LOAD_CHARACTERS)
   (enter {$this show_char 0 {game get_character_outfit}})
}
#define SEL_DIFFICULTY_COMMON (
   (update_focus
      {$this set_focus
         {switch {$this last_difficulty}
            (kDifficultyEasy sd_diff1.btn)
            (kDifficultyMedium sd_diff2.btn)
            (kDifficultyHard sd_diff3.btn)
            (kDifficultyExpert sd_diff4.btn)
         }
      }
   )
   (set_difficulty
      ($component $player_num)
      {{game get_player_config $player_num} set_difficulty
         {switch $component
            (sd_diff1.btn kDifficultyEasy)
            (sd_diff2.btn kDifficultyMedium)
            (sd_diff3.btn kDifficultyHard)
            (sd_diff4.btn kDifficultyExpert)
         }
      }
      {$this update_difficulty}
   )
   (SELECT_START_MSG
      {$this set_difficulty $component 0}
      {if {> {game get_num_players} 1}
         {$this set_difficulty $component 1}
      }
      kDataUnhandled
   )
)
{new UIPanel
   sel_difficulty_panel
   (file sel_difficulty.milo)
   SEL_DIFFICULTY_COMMON
   (enter {$this update_focus})
   (last_difficulty {game get_difficulty 0})
   (update_difficulty)
}
{new UIPanel
   sel_diff_career_panel
   (file sel_diff_career.milo)
   SEL_DIFFICULTY_COMMON
   (enter
      {sd_easy_status.lbl set_localized_text
         {campaign get_status_progress kDifficultyEasy}
      }
      {sd_med_status.lbl set_localized_text
         {campaign get_status_progress kDifficultyMedium}
      }
      {sd_hard_status.lbl set_localized_text
         {campaign get_status_progress kDifficultyHard}
      }
      {sd_expert_status.lbl set_localized_text
         {campaign get_status_progress kDifficultyExpert}
      }
      {$this update_focus}
   )
   (last_difficulty {campaign last_difficulty})
   (update_difficulty {campaign update_difficulty})
}
{new GHScreen
   sel_difficulty_screen
   (animate_transition {! $dx_fast_menus})
   (panels meta sel_diff_career_panel helpbar char_single)
   (focus sel_diff_career_panel)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (start dx_os_helpbar)
            (strum help_updown)
         )
      )
   )
   (SELECT_START_MSG
      {sel_diff_career_panel set_difficulty $component 0}
      {if_else {campaign new_campaign}
         {ui goto_screen sel_character_new_screen}
         {do
            {campaign get_character_info}
            {ui goto_screen career_screen}
         }
      }
      kDataUnhandled
   )
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Tri}
         {$this backwards_anim}
         {synth play_sequence button_back.cue}
         {ui goto_screen chooseprof_screen}
      }
      DX_OPEN_OVERSHELL
      kDataUnhandled
   )
}
{new GHPanel
   tour_start_panel
   (file sponsorship1.milo)
   (enter
      {play_sfx cash_award.cue}
      {if_else {== kDifficultyEasy {game get_difficulty 0}}
         {do
            {sponsor_cash.lbl set_showing FALSE}
            {sponsor_amount.lbl set_showing FALSE}
         }
         {do
            ($starting_cash {campaign starting_cash})
            {sponsor_amount.lbl set_text
               {sprintf {localize career_cash_format} $starting_cash}
            }
            {campaign add_cash $starting_cash}
         }
      }
   )
}
{new GHScreen
   tour_start_screen
   (animate_transition {! $dx_fast_menus})
   (panels meta tour_start_panel helpbar char_single)
   (focus tour_start_panel)
   (allow_back FALSE)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (start dx_os_helpbar)
         )
      )
   )
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {synth play_sequence button_select}
         {autosave_goto career_screen}
      }
      DX_OPEN_OVERSHELL
      TRUE
   )
}
{new GHPanel
   career_panel
   (file career.milo)
   (focus cm_letsrock.btn)
   (enter
      {cm_char.lbl set_text {game get_character}}
      {print {game get_total_num_skins}}
      {if_else {== 1 {game get_total_num_skins}}
         {do
            {cm_guitar.lbl set_text {game get_guitar_skin}}
            {cm_guitar_skin.lbl set_localized_text ""}
         }
         {do
            {cm_guitar.lbl set_text {game get_guitar}}
            {cm_guitar_skin.lbl set_text {game get_guitar_skin}}
         }
      }
      {cm_cash.lbl set_localized_text
         {sprintf {localize career_cash_format} {campaign cash}}
      }
      {cm_band.lbl set_localized_text
         {campaign profile_name {campaign profile_slot}}
      }
      {cm_score.lbl set_localized_text
         {sprintf {localize career_score_format} {campaign career_score}}
      }
      {cm_career.lbl set_text {game get_difficulty_sym 0}}
      {if {== kDifficultyEasy {game get_difficulty 0}}
         {$this disable cm_store.btn}
      }
      {cm_cash.lbl set_showing {!= kDifficultyEasy {game get_difficulty 0}}}
      {cm_cash_title.lbl set_showing
         {!= kDifficultyEasy {game get_difficulty 0}}
      }
      {$this set_focus cm_letsrock.btn}
   )
   (SELECT_START_MSG
      {switch $component
         (cm_letsrock.btn {autosave_goto sel_venue_screen})
         (cm_hero.btn {ui goto_screen sel_character_edit_screen})
         (cm_guitar.btn {ui goto_screen sel_guitar_edit_screen})
         (cm_store.btn {ui goto_screen store_screen})
      }
   )
}
{new GHScreen
   career_screen
   (animate_transition {! $dx_fast_menus})
   (panels meta career_panel helpbar char_single)
   (focus career_panel)
   (allow_back FALSE)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (start dx_os_helpbar)
            (strum help_updown)
         )
      )
   )
   (enter
      {$this turn_off_ambient}
      #ifdef HX_XBOX
      {content_mgr start_enumeration}
      #endif
   )
   (resume_from_practice
      {practice_sel_section_screen set career_mode FALSE}
      {gamecfg set mode career}
      {gamecfg set continue_screen sel_song_screen}
   )
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Tri}
         {$this backwards_anim}
         {synth play_sequence button_back.cue}
         {autosave_goto sel_difficulty_screen}
      }
      DX_OPEN_OVERSHELL
      kDataUnhandled
   )
}
{new GHPanel
   sel_character_panel
   (file sel_character.milo)
   (char_focus rockabill)
   (char_outfit rockabill1)
   (old_scroll_pos 0)
   (focus character.lst)
   (skin_select FALSE)
   (enter
      ;we statically set the contents of the select character list here
      ;because we have hidden characters that scroll past the end of the list normally
      {character.lst set_data
         (punk alterna glam goth metal rockabill rock deathmetal classic funk1 grim)
      }
      ;{character.lst set_provider character_provider}
      {animate_forever_30fps $this sel_character.view}
      {sel_skin.tnm set_frame 0}
      {char_highlight.mnm animate
         (loop 0 3)
         (period 0.25)
         (units kTaskUISeconds)
      }
      {set [skin_select] FALSE}
      {$this set_focus character.lst}
      {text_character.grp set_showing TRUE}
      {text_skin.grp set_showing FALSE}
      {do
         ($character {game get_character})
         ($outfit {game get_character_outfit})
         {char_single show_char 0 $outfit}
         {char_single char_event 0 animate}
         {sc_char_nm.lbl set_text $character}
         {sc_char_blurb.lbl set_localized_text
            {localize {sprint $character "_blurb"}}
         }
         ;specifically 80s grim is not classified as a character, but has a unique bio, so display it here
         {if {== {game get_character_outfit} gr80}
            {sc_char_blurb.lbl set_localized_text {localize gr80_blurb}}
         }
         {$this set char_outfit $outfit}
         ;thats right, another huge switch!
         ;we need to map the extended characters to where they actually go in the list, and then jump to that spot
         {switch {game get_character}
            (
               (punk3 punk4 punk5)
               {$this set char_focus punk}
               {character.lst set_selected 0}
            )
            (
               (alterna3 alterna4 alterna5)
               {$this set char_focus alterna}
               {character.lst set_selected 1}
            )
            (
               (glam3 glam4 glam5)
               {$this set char_focus glam}
               {character.lst set_selected 2}
            )
            (
               (goth3 goth4 goth5)
               {$this set char_focus goth}
               {character.lst set_selected 3}
            )
            (
               (metal3 metal4 metal5)
               {$this set char_focus metal}
               {character.lst set_selected 4}
            )
            (
               (eddiebill3 eddiebill4)
               {$this set char_focus rockabill}
               {character.lst set_selected 5}
            )
            (
               (rock3 rock4)
               {$this set char_focus rock}
               {character.lst set_selected 6}
            )
            (
               (deathmetal3 deathmetal4)
               {$this set char_focus deathmetal}
               {character.lst set_selected 7}
            )
            (
               (gr80 grog)
               {$this set char_focus grim}
               {character.lst set_selected 10}
            )
            ;fallback for any characters not listed above
            {$this set char_focus $character}
            {character.lst set_selected {character_provider get_index $character}}
         }
         {$this set old_scroll_pos {character.lst selected_pos}}
         {char_highlight.tnm set_frame [old_scroll_pos]}
         {foreach $c CHARACTERS
            {do
               ($mesh {sprint "char_" $c ".mesh"})
               {if_else {campaign is_unlocked $c}
                  {$mesh set_mat
                     {sprint "char_" $c ".mat"}
                  }
                  {$mesh set_mat char_locked.mat}
               }
            }
         }
      }
   )
   (poll {scl_loading.lbl set_showing {! {char_single are_chars_loaded}}})
   (exit {set [skin_select] FALSE})
   (choose_skins
      {set [skin_select] TRUE}
      {text_character.grp set_showing FALSE}
      {text_skin.grp set_showing TRUE}
      {sel_skin.tnm animate
         (units kTaskUISeconds)
         (period SKIN_ANIM_TIME)
         (range 0 10)
      }
      {if_else
         {==
            {character_provider get_outfit [char_focus] 1}
            [char_outfit]
         }
         {$this set_focus outfit2.btn}
         {$this set_focus outfit1.btn}
      }
      ;set up another static list to detirmine if a 3rd, 4th, and 5th alt outfit is available for the selected char
      ;then also store that outfit name
      {if $dx_third_outfit
         {set $alt3outfit 0}
         {switch [char_focus]
            (alterna {set $alt3outfit alterna3})
            (glam {set $alt3outfit glam3})
            (punk {set $alt3outfit punk3})
            (metal {set $alt3outfit metal3})
            (goth {set $alt3outfit goth3})
            (rockabill {set $alt3outfit eddiebill3})
            (deathmetal {set $alt3outfit deathmetal3})
            (grim {set $alt3outfit grog})
            (rock {set $alt3outfit rock3})
         }
      }
      {if $dx_fourth_outfit
         {set $alt4outfit 0}
         {switch [char_focus]
            (alterna {set $alt4outfit alterna4})
            (glam {set $alt4outfit glam4})
            (punk {set $alt4outfit punk4})
            (metal {set $alt4outfit metal4})
            (goth {set $alt4outfit goth4})
            (rockabill {set $alt4outfit eddiebill4})
            (deathmetal {set $alt4outfit deathmetal4})
            (rock {set $alt4outfit rock4})
         }
      }
      {if $dx_fifth_outfit
         {set $alt5outfit 0}
         {switch [char_focus]
            (alterna {set $alt5outfit alterna5})
            (glam {set $alt5outfit glam5})
            (punk {set $alt5outfit punk5})
            (metal {set $alt5outfit metal5})
            (goth {set $alt5outfit goth5})
         }
      }
      ;if a third outfit is found, enable our third button, otherwise disable it
      {if_else $dx_third_outfit
         {do
            {$this enable outfit0.btn}
            {outfit0.btn set_showing TRUE}
            {outfit0.btn set_text
               {sprint
                  {character_provider get_outfit $alt3outfit 0}
                  _outfit
               }
            }
         }
         {do
            {$this disable outfit0.btn}
            {outfit0.btn set_showing FALSE}
         }
      }
      ;if a fourth outfit is found, enable our fourth button, otherwise disable it
      {if_else $dx_fourth_outfit
         {do
            {$this enable outfit3.btn}
            {outfit3.btn set_showing TRUE}
            {outfit3.btn set_text
               {sprint
                  {character_provider get_outfit $alt4outfit 0}
                  _outfit
               }
            }
         }
         {do
            {$this disable outfit3.btn}
            {outfit3.btn set_showing FALSE}
         }
      }
      ;if a fifth outfit is found, enable our fifth button, otherwise disable it
      {if_else $dx_fifth_outfit
         {do
            {$this enable outfit4.btn}
            {outfit4.btn set_showing TRUE}
            {outfit4.btn set_text
               {sprint
                  {character_provider get_outfit $alt5outfit 0}
                  _outfit
               }
            }
         }
         {do
            {$this disable outfit4.btn}
            {outfit4.btn set_showing FALSE}
         }
      }
      {outfit1.btn set_text
         {sprint
            {character_provider get_outfit [char_focus] 0}
            _outfit
         }
      }
      {outfit2.btn set_text
         {sprint
            {character_provider get_outfit [char_focus] 1}
            _outfit
         }
      }
   )
   (unchoose_skins
      {set [skin_select] FALSE}
      {text_skin.grp set_showing FALSE}
      {text_character.grp set_showing TRUE}
      {sel_skin.tnm animate
         (units kTaskUISeconds)
         (period SKIN_ANIM_TIME)
         (range 10 0)
      }
      {$this set_focus character.lst}
      {synth play_sequence button_back.cue}
   )
   (open_door)
   (SCROLL_MSG
      {do
         ($new_scroll_pos {character.lst selected_pos})
         ;handle skipping locked chars in our new static list
         ;yes i know this also sucks
         ;the idea is we check the last position, and the position we scrolled to
         ;this gives us a direction, and an understanding if we are out of the current bounds
         ;since we made the list static, it doesnt dynamically reduce the list itself
         ;we have to manage those locked spots, and skip if they are locked
         {if {== [old_scroll_pos] 0}
            {if {&& {== $new_scroll_pos 10} {! {campaign is_unlocked grim}}}
               {$this set old_scroll_pos $new_scroll_pos}
               {set $new_scroll_pos {- $new_scroll_pos 1}}
               {character.lst set_selected $new_scroll_pos}
            }
         }
         {if {== [old_scroll_pos] 10}
            {if {&& {== $new_scroll_pos 9} {! {campaign is_unlocked funk1}}}
               {$this set old_scroll_pos $new_scroll_pos}
               {set $new_scroll_pos {- $new_scroll_pos 1}}
               {character.lst set_selected $new_scroll_pos}
            }
         }
         {if {== [old_scroll_pos] 9}
            {if {&& {== $new_scroll_pos 8} {! {campaign is_unlocked classic}}}
               {$this set old_scroll_pos $new_scroll_pos}
               {set $new_scroll_pos {- $new_scroll_pos 1}}
               {character.lst set_selected $new_scroll_pos}
            }
         }
         {if {== [old_scroll_pos] 7}
            {if {&& {== $new_scroll_pos 8} {! {campaign is_unlocked classic}}}
               {$this set old_scroll_pos $new_scroll_pos}
               {set $new_scroll_pos {+ $new_scroll_pos 1}}
               {character.lst set_selected $new_scroll_pos}
            }
         }
         {if {== [old_scroll_pos] 8}
            {if {&& {== $new_scroll_pos 9} {! {campaign is_unlocked funk1}}}
               {$this set old_scroll_pos $new_scroll_pos}
               {set $new_scroll_pos {+ $new_scroll_pos 1}}
               {character.lst set_selected $new_scroll_pos}
            }
         }
         {if {== [old_scroll_pos] 9}
            {if {&& {== $new_scroll_pos 10} {! {campaign is_unlocked grim}}}
               {$this set old_scroll_pos $new_scroll_pos}
               {set $new_scroll_pos 0}
               {character.lst set_selected $new_scroll_pos}
            }
         }
         {if
            {&&
               {!= $new_scroll_pos [old_scroll_pos]}
               {character_provider is_active $new_scroll_pos}
            }
            {synth play_sequence button_toggle}
            {set [char_focus] {character_provider get_symbol $new_scroll_pos}}
            {if_else {== [char_focus] {game get_character}}
               {set [char_outfit] {game get_character_outfit}}
               {set [char_outfit]
                  {character_provider get_outfit [char_focus] 0}
               }
            }
            {if [char_focus]
               {sc_char_nm.lbl set_text [char_focus]}
               {sc_char_blurb.lbl set_localized_text
                  {localize {sprint [char_focus] "_blurb"}}
               }
               {char_single show_char 0 [char_outfit]}
               {char_single char_event 0 animate}
               {$this set old_scroll_pos $new_scroll_pos}
               {char_highlight.tnm set_frame $new_scroll_pos}
            }
         }
      }
   )
   (FOCUS_MSG
      {if [skin_select]
         {do
            ($idx)
            ($old_char)
            {set $char_stored_focus $new_focus}
            {synth play_sequence button_toggle}
            ;extends idx support for a third outfit
            ;we store extended outfits on new chars, so we map idx to account
            {switch $char_stored_focus
               ("outfit1.btn" {set $idx 0})
               ("outfit2.btn" {set $idx 1})
               ("outfit0.btn" {set $idx 0}) ;outfit 3 (80s)
               ("outfit3.btn" {set $idx 0}) ;outfit 4 (ps2 1)
               ("outfit4.btn" {set $idx 1}) ;outfit 5 (ps2 2)
            }
            {set [char_outfit]
               {character_provider get_outfit [char_focus] $idx}
            }
            ;replaced the tnm with manually moving the mesh to account for our new buttons
            ;its just easier than hex editing the tnm sorry
            {switch $char_stored_focus
               ("outfit1.btn" {cs_arrow.mesh set_local_pos 20 0 120})
               ("outfit2.btn" {cs_arrow.mesh set_local_pos 20 0 80})
               ("outfit0.btn" {cs_arrow.mesh set_local_pos 20 0 160}) ;outfit 3 (80s)
               ("outfit3.btn" {cs_arrow.mesh set_local_pos 20 0 40}) ;outfit 4 (ps2 1)
               ("outfit4.btn" {cs_arrow.mesh set_local_pos 20 0 0}) ;outfit 5 (ps2 2)
            }
            ;{cs_arrow.tnm set_frame $idx}
            {set $old_char {char_single get_char 0}}
            ;yes i know this is terrible. im sorry
            ;so, the game eats shit on `show_char` whenever there is a 3rd+ outfit for a char
            ;I didnt want to add the extra outfits as chars, but because of this problem, i had to
            ;so here, we have to fix up the character before we use show_char
            ;this will check which button is highlight, and handle setting to the proper char and outfit manually
            ;$old_char is set to false because of an issue with charclips overflowing when switching characters like this
            {switch $char_stored_focus
               (
                  "outfit0.btn" ;outfit 3 (80s)
                  {switch {char_single get_char 0}
                     (
                        (alterna alterna1 alterna2 alterna3 alterna4 alterna5)
                        {set $old_char FALSE}
                        {game set_character alterna3 TRUE}
                        {$this set char_outfit alterna3}
                     )
                     (
                        (glam glam1 glam2 glam3 glam4 glam5)
                        {set $old_char FALSE}
                        {game set_character glam3 TRUE}
                        {$this set char_outfit glam3}
                     )
                     (
                        (punk punk1 punk2 jnog punk3 punk4 punk5)
                        {set $old_char FALSE}
                        {game set_character punk3 TRUE}
                        {$this set char_outfit punk3}
                     )
                     (
                        (metal metal1 metal2 metal3 metal4 metal5)
                        {set $old_char FALSE}
                        {game set_character metal3 TRUE}
                        {$this set char_outfit metal3}
                     )
                     (
                        (goth goth1 goth2 goth3 goth4 goth5)
                        {set $old_char FALSE}
                        {game set_character goth3 TRUE}
                        {$this set char_outfit goth3}
                     )
                     #ifdef HX_XBOX
                     (
                        (rockabill rockabill1 rockabill2 eddiebill3 eddiebill4)
                        {set $old_char FALSE}
                        {game set_character eddiebill3 TRUE}
                        {$this set char_outfit eddiebill3}
                     )
                     (
                        (deathmetal deathmetal1 deathmetal2 deathmetal3 deathmetal4)
                        {set $old_char FALSE}
                        {game set_character deathmetal3 TRUE}
                        {$this set char_outfit deathmetal3}
                     )
                     (
                        (rock rock1 rock2 rock3 rock4)
                        {set $old_char FALSE}
                        {game set_character rock3 TRUE}
                        {$this set char_outfit rock3}
                     )
                     (
                        (grim gr80 grog)
                        {game set_character grog TRUE}
                        {set $old_char FALSE}
                        {$this set char_outfit grog}
                     )
                     #endif
                  }
               )
               (
                  "outfit1.btn"
                  {switch {char_single get_char 0}
                     (
                        (alterna alterna1 alterna2 alterna3 alterna4 alterna5)
                        {set $old_char FALSE}
                        {game set_character alterna1 TRUE}
                        {$this set char_outfit alterna1}
                     )
                     (
                        (glam glam1 glam2 glam3 glam4 glam5)
                        {set $old_char FALSE}
                        {game set_character glam1 TRUE}
                        {$this set char_outfit glam1}
                     )
                     (
                        (punk punk1 punk2 jnog punk3 punk4 punk5)
                        {set $old_char FALSE}
                        {game set_character punk1 TRUE}
                        {$this set char_outfit punk1}
                     )
                     (
                        (metal metal1 metal2 metal3 metal4 metal5)
                        {set $old_char FALSE}
                        {game set_character metal1 TRUE}
                        {$this set char_outfit metal1}
                     )
                     (
                        (goth goth1 goth2 goth3 goth4 goth5)
                        {set $old_char FALSE}
                        {game set_character goth2 TRUE}
                        {$this set char_outfit goth2}
                     )
                     (
                        (rockabill rockabill1 rockabill2 eddiebill3 eddiebill4)
                        {set $old_char FALSE}
                        {game set_character rockabill1 TRUE}
                        {$this set char_outfit rockabill1}
                     )
                     (
                        (deathmetal deathmetal1 deathmetal2 deathmetal3 deathmetal4)
                        {set $old_char FALSE}
                        {game set_character deathmetal1 TRUE}
                        {$this set char_outfit deathmetal1}
                     )
                     (
                        (rock rock1 rock2 rock3 rock4)
                        {set $old_char FALSE}
                        {game set_character rock2 TRUE}
                        {$this set char_outfit rock2}
                     )
                     (
                        (grim grog gr80)
                        {set $old_char FALSE}
                        {game set_character grim TRUE}
                        {$this set char_outfit grim}
                     )
                  }
               )
               (
                  "outfit2.btn"
                  {switch {char_single get_char 0}
                     (
                        (alterna alterna1 alterna2 alterna3 alterna4 alterna5)
                        {set $old_char FALSE}
                        {game set_character alterna2 TRUE}
                        {$this set char_outfit alterna2}
                     )
                     (
                        (glam glam1 glam2 glam3 glam4 glam5)
                        {set $old_char FALSE}
                        {game set_character glam2 TRUE}
                        {$this set char_outfit glam2}
                     )
                     (
                        (punk punk1 punk2 jnog punk3 punk4 punk5)
                        {set $old_char FALSE}
                        {game set_character punk2 TRUE}
                        {$this set char_outfit punk2}
                     )
                     (
                        (metal metal1 metal2 metal3 metal4 metal5)
                        {set $old_char FALSE}
                        {game set_character metal2 TRUE}
                        {$this set char_outfit metal2}
                     )
                     (
                        (goth goth1 goth2 goth3 goth4 goth5)
                        {set $old_char FALSE}
                        {game set_character goth1 TRUE}
                        {$this set char_outfit goth1}
                     )
                     (
                        (rockabill rockabill1 rockabill2 eddiebill3 eddiebill4)
                        {set $old_char FALSE}
                        {game set_character rockabill2 TRUE}
                        {$this set char_outfit rockabill2}
                     )
                     (
                        (deathmetal deathmetal1 deathmetal2 deathmetal3 deathmetal4)
                        {set $old_char FALSE}
                        {game set_character deathmetal2 TRUE}
                        {$this set char_outfit deathmetal2}
                     )
                     (
                        (rock rock1 rock2 rock3 rock4)
                        {game set_character rock1 TRUE}
                        {set $old_char FALSE}
                        {$this set char_outfit rock1}
                     )
                     (
                        (grim gr80 grog)
                        {game set_character grim TRUE}
                        {set $old_char FALSE}
                        {$this set char_outfit gr80}
                     )
                  }
               )
               (
                  "outfit3.btn" ;outfit 4 (ps2 1)
                  {switch {char_single get_char 0}
                     (
                        (alterna alterna1 alterna2 alterna3 alterna4 alterna5)
                        {set $old_char FALSE}
                        {game set_character alterna4 TRUE}
                        {$this set char_outfit alterna4}
                     )
                     (
                        (glam glam1 glam2 glam3 glam4 glam5)
                        {set $old_char FALSE}
                        {game set_character glam4 TRUE}
                        {$this set char_outfit glam4}
                     )
                     (
                        (punk punk1 punk2 jnog punk3 punk4 punk5)
                        {set $old_char FALSE}
                        {game set_character punk4 TRUE}
                        {$this set char_outfit punk4}
                     )
                     (
                        (metal metal1 metal2 metal3 metal4 metal5)
                        {set $old_char FALSE}
                        {game set_character metal4 TRUE}
                        {$this set char_outfit metal4}
                     )
                     (
                        (goth goth1 goth2 goth3 goth4 goth5)
                        {set $old_char FALSE}
                        {game set_character goth4 TRUE}
                        {$this set char_outfit goth4}
                     )
                     (
                        (rockabill rockabill1 rockabill2 eddiebill3 eddiebill4)
                        {set $old_char FALSE}
                        {game set_character eddiebill4 TRUE}
                        {$this set char_outfit eddiebill4}
                     )
                     (
                        (deathmetal deathmetal1 deathmetal2 deathmetal3 deathmetal4)
                        {set $old_char FALSE}
                        {game set_character deathmetal4 TRUE}
                        {$this set char_outfit deathmetal4}
                     )
                     (
                        (rock rock1 rock2 rock3 rock4)
                        {set $old_char FALSE}
                        {game set_character rock4 TRUE}
                        {$this set char_outfit rock4}
                     )
                  }
               )
               (
                  "outfit4.btn" ;outfit 5 (ps2 2)
                  {switch {char_single get_char 0}
                     (
                        (alterna alterna1 alterna2 alterna3 alterna4 alterna5)
                        {set $old_char FALSE}
                        {game set_character alterna5 TRUE}
                        {$this set char_outfit alterna5}
                     )
                     (
                        (glam glam1 glam2 glam3 glam4 glam5)
                        {set $old_char FALSE}
                        {game set_character glam5 TRUE}
                        {$this set char_outfit glam5}
                     )
                     (
                        (punk punk1 punk2 jnog punk3 punk4 punk5)
                        {set $old_char FALSE}
                        {game set_character punk5 TRUE}
                        {$this set char_outfit punk5}
                     )
                     (
                        (metal metal1 metal2 metal3 metal4 metal5)
                        {set $old_char FALSE}
                        {game set_character metal5 TRUE}
                        {$this set char_outfit metal5}
                     )
                     (
                        (goth goth1 goth2 goth3 goth4 goth5)
                        {set $old_char FALSE}
                        {game set_character goth5 TRUE}
                        {$this set char_outfit goth5}
                     )
                  }
               )
            }
            ;sheesh
            {if {char_single show_char 0 [char_outfit]}
               {do
                  ($new_char {char_single get_char 0})
                  {if_else {&& $old_char $new_char}
                     {do
                        {reset_hair $new_char}
                        {{$new_char find main.drv} transfer {$old_char find main.drv}}
                     }
                     {char_single char_event 0 select}
                  }
               }
            }
            {sc_char_outfit_blurb.lbl set_localized_text
               {localize {sprint [char_focus] "_outfit_blurb"}}
            }
         }
      }
      kDataUnhandled
   )
}
#define SEL_CHARACTER_COMMON (
   (panels meta sel_character_panel char_single helpbar)
   (focus sel_character_panel)
   (allow_back FALSE)
   #ifdef HX_XBOX
   (alt_cam_anim TRUE)
   #endif
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (start dx_os_helpbar)
            (strum help_updown)
         )
      )
   )
   (TRANSITION_COMPLETE_MSG
      {char_single set_placer 0 {sel_character_panel find char_single.placer}}
      {char_single set_env 0 {sel_character_panel find character.env}}
   )
   (exit
      {char_single set_placer 0}
      {char_single set_door 0}
   )
   (enter {char_single set_door 0 {sel_character_panel find cs_door.mesh}})
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Tri}
         {if_else {sel_character_panel get skin_select}
            {sel_character_panel unchoose_skins}
            {do
               {$this backwards_anim}
               {synth play_sequence button_back.cue}
               {ui goto_screen [back_screen]}
            }
         }
      }
      DX_OPEN_OVERSHELL
      kDataUnhandled
   )
)
#define SEL_CHARACTER_SELECT_HANDLER (
   {if_else {sel_character_panel get skin_select}
      {do
         ($sel_outfit {sel_character_panel get char_outfit})
         {if {&& $sel_outfit {!= {game get_character_outfit} $sel_outfit}}
            {game set_character $sel_outfit}
         }
         {ui goto_screen [done_screen]}
      }
      {do
         ($sel_char {sel_character_panel get char_focus})
         ;that's right, we are hardcoding maps between characters for outfits
         ;outfit 3 is 80s, or ps2 outfit 1 on xbox
         ;outfit 4 is outfit 1 on xbox on chars from ps2 with an 80s fit, outfit 2 from ps2 on those without
         ;outfit 5 is the remaining outfit 2's from ps2 on xbox

         ;we do the same for 4 and 5 outfit support
         ;these flags enable and disable buttons dynamically in outfit select based on num of combined outfits across characters
         {set $dx_third_outfit FALSE}
         {switch {sel_character_panel get char_focus}
            (
               (punk
                  alterna
                  glam
                  goth
                  metal
                  #ifdef HX_XBOX
                  rockabill
                  rock
                  grim
                  deathmetal
                  #endif
               )
               {set $dx_third_outfit TRUE}
            )
         }
         #ifdef HX_XBOX
         {set $dx_fourth_outfit FALSE}
         {switch {sel_character_panel get char_focus}
            (
               (punk alterna glam goth metal) ;port these and add when done rockabill rock deathmetal
               {set $dx_fourth_outfit TRUE}
            )
         }
         {set $dx_fifth_outfit FALSE}
         {switch {sel_character_panel get char_focus}
            (
               (punk alterna glam goth metal)
               {set $dx_fifth_outfit FALSE} ;set to true when remaining outfits are ported
            )
         }
         #endif
         {if_else {> {character_provider num_outfits $sel_char} 1}
            {sel_character_panel choose_skins}
            {do
               {game set_character {sel_character_panel get char_outfit} TRUE}
               {ui goto_screen [done_screen]}
            }
         }
      }
   }
)
{new GHScreen
   sel_character_new_screen
   (animate_transition {! $dx_fast_menus})
   (done_screen sel_guitar_new_screen)
   (back_screen sel_difficulty_screen)
   SEL_CHARACTER_COMMON
   (SELECT_START_MSG SEL_CHARACTER_SELECT_HANDLER kDataUnhandled)
}
{new GHScreen
   sel_character_edit_screen
   (animate_transition {! $dx_fast_menus})
   (done_screen career_screen)
   (back_screen career_screen)
   SEL_CHARACTER_COMMON
   (SELECT_START_MSG
      SEL_CHARACTER_SELECT_HANDLER
      {campaign set_character_info}
      kDataUnhandled
   )
}
{new GuitarDisplayPanel guitar_display_panel (file "") (force_exit TRUE)}
{new GuitarSelectPanel
   sel_guitar_panel
   (file sel_guitar.milo)
   (quickplay FALSE)
   (enter {sel_guitar.tnm set_frame 0})
   (update_display
      ($play_sfx)
      {do
         ($guitar {$this get_selected_guitar 0})
         ($skin {$this get_selected_skin 0})
         {sg_guitar_nm.lbl set_text $guitar}
         {sg_guitar_desc.lbl set_text {game get_guitar_desc $guitar}}
         {sg_skin_nm.lbl set_text $skin}
         {sg_skin_desc.lbl set_text {game get_guitar_skin_desc $skin}}
         {sg_text_guitar.grp set_showing {! {$this is_skin_select 0}}}
         {sg_text_skin.grp set_showing {$this is_skin_select 0}}
         {guitar_display_panel set_env 0 guitar.env}
         {guitar_display_panel show_guitar
            0
            $guitar
            $skin
            guitar.pxy
            guitar_single.filt
         }
         {if $play_sfx
            {synth play_sequence button_toggle}
         }
      }
   )
   (choose_skins
      {sel_guitar.tnm animate (units kTaskUISeconds) (period 0.4) (range 0 100)}
   )
   (unchoose_skins
      {sel_guitar.tnm animate (units kTaskUISeconds) (period 0.4) (range 100 0)}
      {$this set_skin_select 0 FALSE}
      {sg_text_guitar.grp set_showing {! {$this is_skin_select 0}}}
      {sg_text_skin.grp set_showing {$this is_skin_select 0}}
   )
}
#define SEL_GUITAR_COMMON (
   (panels meta sel_guitar_panel helpbar guitar_display_panel char_single)
   (focus sel_guitar_panel)
   #ifdef HX_XBOX
   (alt_cam_anim TRUE)
   #endif
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (start dx_os_helpbar)
            (strum help_updown)
         )
      )
   )
   (enter
      {sel_guitar_panel set_skin_select 0 FALSE}
      {sel_guitar_panel update_display FALSE}
      {char_single set_paused TRUE}
   )
   (exit {char_single set_paused FALSE})
   (goto_career
      {game set_guitar
         {sel_guitar_panel get_selected_guitar 0}
         {sel_guitar_panel get_selected_skin 0}
      }
      {do
         ($new_campaign {campaign new_campaign})
         {campaign set_character_info}
         {if_else $new_campaign
            {ui goto_screen tour_start_screen}
            {ui goto_screen career_screen}
         }
      }
   )
   (BUTTON_DOWN_MSG
      {switch $button
         (kPad_Tri
            {if_else {sel_guitar_panel is_skin_select 0}
               {$this unchoose_skins}
               {$this go_back}
            }
         )
         kDataUnhandled
      }
      DX_OPEN_OVERSHELL
      kDataUnhandled
   )
   (guitar_selected
      ($player_num)
      {synth play_sequence button_select}
      {if_else {sel_guitar_panel is_skin_select 0}
         {do
            {$this goto_career}
         }
         {do
            ($guitar {sel_guitar_panel get_selected_guitar 0})
            {if_else
               {>
                  {sel_guitar_panel get_num_skins $player_num $guitar}
                  1
               }
               {do
                  {sel_guitar_panel set_skin_select 0 TRUE}
                  {$this choose_skins}
                  {sel_guitar_panel update_display FALSE}
               }
               {do
                  {$this goto_career}
               }
            }
         }
      }
      TRUE
   )
)
{new GHScreen
   sel_guitar_new_screen
   (animate_transition {! $dx_fast_menus})
   SEL_GUITAR_COMMON
   (go_back
      {$this backwards_anim}
      {synth play_sequence button_back.cue}
      {ui goto_screen sel_character_new_screen}
   )
}
{new GHScreen
   sel_guitar_edit_screen
   (animate_transition {! $dx_fast_menus})
   SEL_GUITAR_COMMON
   (go_back
      {$this backwards_anim}
      {synth play_sequence button_back.cue}
      {campaign set_character_info}
      {ui goto_screen career_screen}
   )
}
{new CharsysPanel
   char_store
   (store TRUE)
   (num_placers 1)
   (load_order (STORE_CHARACTERS STORE_OUTFITS))
}
{new GuitarDisplayPanel
   store_guitar_display_panel
   (file "")
   (config store)
}
{new UIPanel
   store_video_panel
   (file store_video.milo)
   (hide {store_video.view set_showing FALSE})
   (animate_video
      {store_video.view animate
         (loop 0 {store_video.view end_frame})
         (units kTaskUISeconds)
      }
   )
}
{new UIPanel store_back_panel (file store_back.milo)}
#ifdef HX_EE
#define STORE_SONG_GENERIC_LOGO ((thunderhorse trogdor))
#endif
{new StorePanel
   store_panel
   (file store.milo)
   (focus st_guitars.btn)
   (retain_last_focus FALSE)
   (category guitar)
   (itemIdx 0)
   (item_name "")
   (item_provider store_item_provider)
   (set_store_mode
      ($b)
      {store_guitar_provider init_data}
      {store_skin_provider init_data}
      {store_video_provider init_data}
   )
   (show_store_screen_1
      {st_screen1.view set_showing TRUE}
      {st_screen2.view set_showing FALSE}
      {$this update_helpbar}
   )
   (show_store_screen_2
      {st_screen1.view set_showing FALSE}
      {st_screen2.view set_showing TRUE}
      {$this set itemIdx 0}
      {$this update_helpbar}
   )
   (get_item_price {$this price [category] [item_name]})
   (can_buy_item
      {&&
         {! {campaign is_unlocked [item_name]}}
         {$this is_item_in_stock}
         {>= {campaign cash} {store_panel get_item_price}}
      }
   )
   (is_item_in_stock
      {'||' {!= [category] guitar} {[item_provider] in_stock [itemIdx]}}
   )
   (update_store_item_desc
      {if_else {$this is_item_in_stock}
         {do
            {st_item_name.lbl set_text {[item_provider] get_text [itemIdx]}}
            {st_item_desc.lbl set_text {sprintf "%s_shop_desc" [item_name]}}
            {st_cost.lbl set_localized_text {sprintf "$%d" {$this get_item_price}}}
            {st_question.lbl set_showing FALSE}
         }
         {do
            {st_item_name.lbl set_text shop_locked_reward}
            {st_item_desc.lbl set_text {sprint [item_name] "_locked_desc"}}
            {st_cost.lbl set_text shop_locked_cost}
            {st_question.lbl set_showing TRUE}
         }
      }
   )
   (update_store_item_display
      {switch [category]
         (character
            {char_store show_char 0 {[item_provider] get_symbol {$this get itemIdx}}}
            {char_store char_event 0 store}
         )
         (outfit
            {char_store show_char 0 [item_name]}
            {char_store char_event 0 store}
         )
         (guitar
            {do
               ($dir {store_panel loaded_dir})
               {store_guitar_display_panel set_env
                  0
                  {$dir find
                     {if_else {[item_provider] in_stock [itemIdx]}
                        guitar.env
                        guitar_black.env
                     }
                  }
               }
               {store_guitar_display_panel show_guitar
                  0
                  {store_guitar_provider get_symbol {$this get itemIdx}}
                  ''
                  {$dir find guitar.pxy}
                  {$dir find guitar_single.filt}
               }
            }
         )
         (skin
            {do
               ($dir {store_panel loaded_dir})
               {store_guitar_display_panel set_env 0 {$dir find guitar.env}}
               {store_guitar_display_panel show_guitar
                  0
                  {store_skin_provider get_guitar {$this get itemIdx}}
                  {store_skin_provider get_symbol {$this get itemIdx}}
                  {$dir find guitar.pxy}
                  {$dir find guitar_single.filt}
               }
            }
         )
         (song
            {song_logos.pic set_tex
               {sprint
                  "ui/image/og/us_logo_"
                  #ifdef HX_XBOX
                  [item_name]
                  #else
                  {if_else {find_elem STORE_SONG_GENERIC_LOGO [item_name]}
                     "generic"
                     [item_name]
                  }
                  #endif
                  "_keep.png"
               }
            }
            {song_preview [item_name]}
         )
      }
      TRUE
   )
   (update_store_item_sold
      {do
         ($item_sold {campaign is_unlocked [item_name]})
         {st_sold.mesh set_showing $item_sold}
      }
      {$this update_helpbar}
   )
   (update_store_category_desc
      {st_blurb.lbl set_text {sprint [category] _shop_desc}}
      {st_poster.pic set_tex
         {sprint "ui/image/og/us_poster_" [category] "_keep.png"}
      }
      #ifdef HX_XBOX
      {if_else {== [category] downloads}
         {st_costrange.lbl set_text store_downloads_costrange}
         {st_costrange.lbl set_localized_text
            {sprintf
               {localize category_cost}
               {store_panel low_cost [category]}
               {store_panel high_cost [category]}
            }
         }
      }
      #else
      {st_costrange.lbl set_localized_text
         {sprintf
            {localize category_cost}
            {store_panel low_cost [category]}
            {store_panel high_cost [category]}
         }
      }
      #endif
      {st_cat_name.lbl set_text {sprint "store_" [category]}}
   )
   (update_total_cash_display
      {st_cash.lbl set_localized_text
         {sprintf {localize store_cash_format} {campaign cash}}
      }
   )
   (update_helpbar
      {do
         ($array)
         {set $array ()}
         {resize $array 0}
         {if_else {st_screen1.view showing}
            {push_back $array (fret1 help_select)}
            {if {$this can_buy_item}
               {push_back $array (fret1 help_buyitem)}
            }
         }
         {push_back $array (fret2 help_back)}
         {push_back $array (strum help_updown)}
         {helpbar set_display $array}
      }
   )
   (enter
      #ifdef HX_XBOX
      {$this set_focus st_guitars.btn}
      {if_else {profilemgr is_active_pad_signed_in}
         {$this enable st_downloads.btn}
         {$this disable st_downloads.btn}
      }
      #endif
      {$this set_store_mode TRUE}
      {$this show_store_screen_1}
      {$this update_store_category_desc}
      {$this update_total_cash_display}
      {$this hide_models}
      {cash.view set_showing FALSE}
      {set [item_provider] store_item_provider}
      {[item_provider] set_category character}
      {char_store show_char 0 {[item_provider] get_symbol 0}}
      {play_sfx store_grate.cue}
   )
   (TRANSITION_COMPLETE_MSG
      {cash.view set_showing TRUE}
      {char_store set_env 0 character.env}
   )
   (exit
      {$this set_store_mode FALSE}
      {cash.view set_showing FALSE}
   )
   (poll
      #ifdef HX_XBOX
      {st_loading.lbl set_showing
         {&&
            {st_screen2.view showing}
            {== [category] character}
            {! {char_store are_chars_loaded}}
         }
      }
      #else
      {if {st_screen2.view showing}
         {st_loading.lbl set_showing
            {&& {== [category] character} {! {char_store are_chars_loaded}}}
         }
      }
      #endif
   )
   #ifdef HX_XBOX
   (SELECT_START_MSG
      {if_else {== $component st_downloads.btn}
         {profilemgr show_marketplace}
         {do
            {set [item_provider] store_item_provider}
            {[item_provider] set_category [category]}
            {switch $component
               (st_guitars.btn
                  {set [item_provider] store_guitar_provider}
                  {store_guitar_display_panel set_showing TRUE}
               )
               (st_skins.btn
                  {set [item_provider] store_skin_provider}
                  {store_guitar_display_panel set_showing TRUE}
               )
               (st_songs.btn
                  {meta_music stop}
                  {profilemgr disable_xmp}
                  {song_logos.pic set_showing TRUE}
               )
               (st_characters.btn
                  {char_store set_placer 0 char_store.placer}
                  {char_store.placer set_showing TRUE}
                  {char_store set_exclusions (STORE_OUTFITS)}
               )
               (st_outfits.btn
                  {char_store set_placer 0 char_store.placer}
                  {char_store.placer set_showing TRUE}
                  {char_store set_exclusions (STORE_CHARACTERS)}
               )
               (st_videos.btn
                  {set [item_provider] store_video_provider}
                  {{store_video_panel find store_video.view} set_showing TRUE}
                  {taskmgr clear_tasks}
                  {store_video_panel animate_video}
               )
            }
            {set [itemIdx] 0}
            {set [item_name] {[item_provider] get_symbol [itemIdx]}}
            {$this show_store_screen_2}
            {$this update_store_item_desc}
            {$this update_store_item_display}
            {$this update_store_item_sold}
            kDataUnhandled
         }
      }
   )
   #else
   (SELECT_START_MSG
      {set [item_provider] store_item_provider}
      {[item_provider] set_category [category]}
      {switch $component
         (st_guitars.btn
            {set [item_provider] store_guitar_provider}
            {store_guitar_display_panel set_showing TRUE}
         )
         (st_skins.btn
            {set [item_provider] store_skin_provider}
            {store_guitar_display_panel set_showing TRUE}
         )
         (st_songs.btn
            {meta_music stop}
            {song_logos.pic set_showing TRUE}
         )
         (st_characters.btn
            {char_store set_placer 0 char_store.placer}
            {char_store.placer set_showing TRUE}
            {char_store set_exclusions (STORE_OUTFITS)}
         )
         (st_outfits.btn
            {char_store set_placer 0 char_store.placer}
            {char_store.placer set_showing TRUE}
            {char_store set_exclusions (STORE_CHARACTERS)}
         )
         (st_videos.btn
            {set [item_provider] store_video_provider}
            {{store_video_panel find store_video.view} set_showing TRUE}
            {taskmgr clear_tasks}
            {store_video_panel animate_video}
         )
      }
      {set [itemIdx] 0}
      {set [item_name] {[item_provider] get_symbol [itemIdx]}}
      {$this show_store_screen_2}
      {$this update_store_item_desc}
      {$this update_store_item_display}
      {$this update_store_item_sold}
      kDataUnhandled
   )
   #endif
   (update_index
      ($dir)
      {set [itemIdx] {mod {'+' [itemIdx] $dir} {[item_provider] list_length}}}
      {set [item_name] {[item_provider] get_symbol [itemIdx]}}
      {$this update_store_item_desc}
      {$this update_store_item_display}
      {$this update_store_item_sold}
      {synth play_sequence button_toggle}
   )
   (hide_models
      {song_preview ''}
      {meta_music start}
      #ifdef HX_XBOX
      {profilemgr enable_xmp}
      #endif
      {st_question.lbl set_showing FALSE}
      {char_store.placer set_showing FALSE}
      {char_store set_placer 0}
      {store_guitar_display_panel set_showing FALSE}
      {song_logos.pic set_showing FALSE}
      {store_video_panel hide}
   )
   (FOCUS_MSG
      {do
         ($new_cat
            {switch $new_focus
               (st_guitars.btn guitar)
               (st_skins.btn skin)
               (st_songs.btn song)
               (st_characters.btn character)
               (st_outfits.btn outfit)
               (st_videos.btn video)
               #ifdef HX_XBOX
               (st_downloads.btn downloads)
               #endif
               kDataUnhandled
            }
         )
         {if {!= $new_cat kDataUnhandled}
            {set [category] $new_cat}
            {$this update_store_category_desc}
         }
      }
      kDataUnhandled
   )
}
{new GHScreen
   store_screen
   (animate_transition {! $dx_fast_menus})
   (panels
      meta
      store_back_panel
      store_guitar_display_panel
      store_video_panel
      char_store
      store_panel
      helpbar
   )
   (focus store_panel)
   (BUTTON_DOWN_MSG
      DX_OPEN_OVERSHELL
      {cond
         ({&&
               {is_updown_button $button}
               {{store_panel find st_screen2.view}
                  showing}}
            {store_panel update_index
               {if_else {== $button kPad_DDown}
                  1
                  -1
               }
            }
         )
         ({== $button kPad_Tri}
            {synth play_sequence button_back.cue}
            {if_else {{store_panel find st_screen1.view} showing}
               {do
                  {store_screen backwards_anim}
                  {autosave_goto career_screen}
               }
               {do
                  {store_panel hide_models}
                  {store_panel show_store_screen_1}
               }
            }
            kDataUnhandled
         )
         ({&&
               {== $button kPad_X}
               {{store_panel find st_screen2.view}
                  showing}}
            {if_else {store_panel can_buy_item}
               {do
                  #ifdef HX_XBOX
                  ($cat {store_panel get category})
                  #endif
                  {campaign buy_item
                     {store_panel get item_name}
                     {store_panel get_item_price}
                  }
                  #ifdef HX_XBOX
                  {if {>= {campaign cash_spent} 10000}
                     {achievements submit money}
                  }
                  #endif
                  {store_panel update_store_item_sold}
                  {store_panel update_total_cash_display}
                  {if
                     #ifdef HX_XBOX
                     {== $cat guitar}
                     #else
                     {== {store_panel get category} guitar}
                     #endif
                     {store_skin_provider init_data}
                  }
                  {ui push_screen store_bought_screen}
                  {play_sfx cash_register}
               }
               {play_sfx button_error}
            }
            TRUE
         )
         (TRUE kDataUnhandled)
      }
   )
}
{new UIPanel store_bought_panel (file store_bought.milo)}
{new GHScreen
   store_bought_screen
   (panels store_bought_panel)
   (focus store_bought_panel)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar (default ((fret1 help_continue))))
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {synth play_sequence button_select}
         {ui pop_screen}
      }
   )
   (enter
      {{store_bought_panel find store_bought.lbl} set_text
         {sprintf "%s_bought_blurb" {store_panel get category}}
      }
   )
   (exit {store_panel update_store_item_sold})
}
#define SEL_VENUE_SCREEN_HANDLERS (
   (panels meta sel_venue_panel helpbar)
   (focus sel_venue_panel)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (start dx_os_helpbar)
            (strum help_updown)
         )
      )
   )
   (venue_button_name
      ($venue)
      {sprintf "sv_%s.btn" $venue}
   )
   (venue_button
      ($venue)
      {sel_venue_panel find {sprintf "sv_%s.btn" $venue}}
   )
   (enter
      {campaign foreach_venue $venue
         {do
            ($button {$this venue_button_name $venue})
            ($unlocked {campaign is_unlocked $venue})
            {if_else $unlocked
               {$this enable {sel_venue_panel find $button}}
               {$this disable {sel_venue_panel find $button}}
            }
         }
      }
      {game set_career_venue}
      {do
         ($index {game get_venue_index})
         ($venue {game get_venue})
         {{sel_venue_panel find venue_anims.grp} set_frame {'+' $index 1}}
         {$this set_focus {$this venue_button $venue}}
      }
   )
   (set_venue_map_frame
      ($frame)
      {{sel_venue_panel find venue_anims.grp} animate
         (dest $frame)
         (period VENUE_MAP_SCROLL_SEC)
         (units kTaskUISeconds)
      }
   )
   (FOCUS_MSG
      {if {! {ui in_transition}}
         {switch $new_focus
            (sv_battle.btn
               {$this set_venue_map_frame 1}
               {game set_venue battle}
            )
            (sv_small1.btn
               {$this set_venue_map_frame 2}
               {game set_venue small1}
            )
            (sv_small2.btn
               {$this set_venue_map_frame 3}
               {game set_venue small2}
            )
            (sv_big.btn
               {$this set_venue_map_frame 4}
               {game set_venue big}
            )
            (sv_theatre.btn
               {$this set_venue_map_frame 5}
               {game set_venue theatre}
            )
            (sv_fest.btn
               {$this set_venue_map_frame 6}
               {game set_venue fest}
            )
            (sv_arena.btn
               {$this set_venue_map_frame 7}
               {game set_venue arena}
            )
            (sv_stone.btn
               {$this set_venue_map_frame 8}
               {game set_venue stone}
            )
         }
      }
   )
   (SELECT_START_MSG {ui goto_screen [next_screen]} kDataUnhandled)
)
{new GHPanel sel_venue_panel (file sel_venue.milo) (focus sv_battle.btn)}
{new GHScreen
   sel_venue_screen
   (animate_transition {! $dx_fast_menus})
   (allow_back FALSE)
   (next_screen sel_song_screen)
   SEL_VENUE_SCREEN_HANDLERS
   (BUTTON_DOWN_MSG
      {cond
         ({== $button kPad_Tri}
            {$this backwards_anim}
            {synth play_sequence button_back.cue}
            {ui goto_screen career_screen}
         )
      }
      DX_OPEN_OVERSHELL
      kDataUnhandled
   )
}
#ifdef HX_XBOX
{new GHScreen
   storage_changed_screen
   (animate_transition {! $dx_fast_menus})
   DIALOG_SCREEN
   (enter
      {dialog setup mc_continue '' button1 mc_storage_changed mc_title_error}
   )
   (SELECT_START_MSG {ui goto_screen main_screen})
}
#endif
{new
   #ifdef HX_XBOX
   SelSongPanel
   #else
   GHPanel
   #endif
   sel_song_panel
   (file
      #ifdef HX_XBOX
      {do
         ($cfg {gamecfg get mode})
         {cond
            ($leaderboards_mode sel_song_leaderboards.milo)
            ({'||' {== career $cfg} {== multi_coop $cfg}} sel_song.milo)
            (TRUE sel_song_quickplay.milo)
         }
      }
      #else
      {switch {gamecfg get mode}
         ((career multi_coop) sel_song.milo)
         sel_song_quickplay.milo
      }
      #endif
   )
   (metamusic_on_exit TRUE)
   (focus ss_song.lst)
   (joypad
      (hold_ms 500)
      (repeat_ms 80)
   )
   #ifdef HX_XBOX
   (load
      {profilemgr add_sink $this storage_changed}
      {content_mgr start_enumeration}
   )
   (storage_changed
      {$this clear_cache}
      {ui goto_screen storage_changed_screen}
   )
   #endif
   (enter
      {{ui current_screen} turn_off_ambient}
      ;dx store original profile and unlock all songs in quickplay
      {dx_song_beater}
      #ifdef HX_XBOX
      {$this refresh}
      #else
      {if {! {{ui current_screen} sel_song_career}}
         {song_provider set_quickplay TRUE}
      }
      {ss_song.lst set_provider song_provider}
      {if {== {game get_song_index} -1}
         {game set_song_index 0}
      }
      ;reload stored song position if exists
      {if $dx_song_index
         {ss_song.lst set_selected $dx_song_index}
      }
      {$this update_song_info}
      #endif
   )
   (update_song_info
      {if
         #ifdef HX_XBOX
         {== kSongsCareer {song_provider get_mode}}
         #else
         {== 0 {song_provider get_quickplay}}
         #endif
         {game set_career_song}
      }
      {ss_song.lst set_selected {game get_song_index}}
      #ifdef HX_XBOX
      {if {! $leaderboards_mode}
         {meta_music stop}
         {profilemgr disable_xmp}
      }
      #else
      {meta_music stop}
      #endif
      {$this update_pos}
   )
   #ifdef HX_XBOX
   (exit
      ;dx relock campaign items and set to original profile
      {if $unlocked_all
         {set $unlocked_all FALSE}
         {campaign set_all_access FALSE}
         {campaign set_profile_slot $return_slot}
      }
      {if {! $leaderboards_mode}
         {song_preview ''}
         {if [metamusic_on_exit]
            {meta_music start}
            {profilemgr enable_xmp}
         }
         {set [metamusic_on_exit] TRUE}
         {song_provider set_mode kSongsCareer}
      }
   )
   (unload {profilemgr remove_sink $this storage_changed})
   #else
   (exit
      ;dx relock campaign items and set to original profile
      {if $unlocked_all
         {set $unlocked_all FALSE}
         {campaign set_all_access FALSE}
         {campaign set_profile_slot $return_slot}
      }
      {song_preview ''}
      {if [metamusic_on_exit]
         {meta_music start}
      }
      {set [metamusic_on_exit] TRUE}
      {song_provider set_quickplay FALSE}
   )
   #endif
   (SCROLL_MSG {$this update_pos})
   (update_pos
      {do
         ($pos {ss_song.lst selected_pos})
         ($frame {'+' $pos {song_provider num_headers $pos}})
         #ifdef HX_XBOX
         {if {! $leaderboards_mode}
            {game set_song_index $pos}
            {$this cache_song}
            {song_preview {game get_song}}
         }
         #else
         {game set_song_index $pos}
         {song_preview {game get_song}}
         #endif
         {sel_song.view set_frame $frame}
         #ifdef HX_EE
         ;jump back to the top of the list once we hit our hidden settings song
         {if {== {game get_song} z_1tspeed}
            {ss_song.lst set_selected 0}
            {$this update_pos}
         }
         #endif
         ;store positional index of last song scrolled to
         {set $dx_song_index {ss_song.lst selected_pos}}
      }
   )
   (beat_song
      ($score)
      {if {$this is_up}
         {do
            ($index {ss_song.lst selected_pos})
            ($song {song_provider get_symbol $index})
            {campaign cheat_beat_song $song $score}
            {$this refresh}
         }
      }
   )
   (beat_song
      {if {$this is_up}
         {do
            ($index {ss_song.lst selected_pos})
            ($song {song_provider get_symbol $index})
            {campaign beat_song $song}
            {$this refresh}
         }
      }
   )
   (gold_song
      {if {$this is_up}
         {campaign cheat_gold_song
            {song_provider get_symbol {ss_song.lst selected_pos}}
         }
         {$this refresh}
      }
   )
   #ifdef HX_XBOX
   (refresh
      {song_provider set_mode
         {switch {ui current_screen}
            (leaderboards_song_screen kSongsLeaderboards)
            (sel_song_screen kSongsCareer)
            kSongsQuickplay
         }
      }
      {ss_song.lst set_provider song_provider}
      {if {&& {! $leaderboards_mode} {== {game get_song_index} -1}}
         {game set_song_index 0}
      }
      {$this update_song_info}
   )
   #else
   (refresh
      {if {! {{ui current_screen} sel_song_career}}
         {song_provider set_quickplay TRUE}
      }
      {ss_song.lst set_provider song_provider}
      {if {== {game get_song_index} -1}
         {game set_song_index 0}
      }
      {$this update_song_info}
   )
   #endif
}
{new GHScreen
   sel_song_screen
   (animate_transition {! $dx_fast_menus})
   (panels meta sel_song_panel helpbar)
   (focus sel_song_panel)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (start dx_os_helpbar)
            (strum help_updown)
         )
      )
   )
   (sel_song_career TRUE)
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Tri}
         {$this backwards_anim}
         {synth play_sequence button_back.cue}
         {ui goto_screen sel_venue_screen}
      }
      DX_OPEN_OVERSHELL
      kDataUnhandled
   )
   (SELECT_START_MSG
      {sel_song_panel set metamusic_on_exit FALSE}
      {ui goto_screen loading_screen}
      kDataUnhandled
   )
}